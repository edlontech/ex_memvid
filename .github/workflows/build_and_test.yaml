on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

env:
  USE_EXLA: true

jobs:
  build:
    if: github.head_ref != 'release-please--branches--main'
    strategy:
      matrix:
        elixir: ["1.18.1"]
        otp: ["27.2"]

    name: Build and test
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4

      - name: Install Deps
        run: |
          sudo apt-get update
          sudo apt-get install ffmpeg libavutil-dev libavcodec-dev libswscale-dev libavformat-dev libavfilter-dev libavdevice-dev libblas-dev

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Restore deps and _build cache
        id: mix-deps
        uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-

      - name: Fetch and Compile Dependencies
        if: steps.mix-deps.outputs.cache-hit != 'true'
        run: |
          mix deps.get
          mix deps.compile

      - name: PLT Cache
        uses: actions/cache@v4
        id: plt-cache
        with:
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles('**/mix.lock') }}
          path: |
            _plts/core

      - name: Create PLTs
        if: steps.plt-cache.outputs.cache-hit != 'true'
        run: |
          mix dialyzer --plt

      - name: Run Checks
        run: mix check
